pipeline {
    agent any

    stages {
        // 1단계: Git 클론
        stage('Git Clone') {
            steps {
                git branch: 'dev-fe', credentialsId: 'gitlab-credentials', url: 'https://lab.ssafy.com/s11-final/S11P31B105.git'
            }
            post {
                success { echo 'Repository clone 성공!' }
                failure { echo 'Repository clone 실패!' }
            }
        }

        // 2단계: Docker 이미지 빌드
        stage('Build Docker Image') {
            steps {
                dir('./FrontendApp') {  
                    sh 'docker build --no-cache -t react-native .'  // Docker Compose 없이 docker build 사용
                }
                echo 'Docker 이미지 빌드 완료'
            }
            post {
                success { echo '이미지 빌드 성공' }
                failure { echo '이미지 빌드 실패' }
            }
        }

        // 3단계: 기존 컨테이너 중지 및 제거
        stage('Stop and Remove Existing Container') {
            steps {
                dir('/home/ubuntu') {  
                    sh '''
                        docker-compose stop react-native
                        docker-compose rm -f react-native
                    '''
                }
                echo '기존 React-Native 컨테이너 중지 및 제거 완료'
            }
            post {
                success { echo '컨테이너 중지 및 제거 성공' }
                failure { echo '컨테이너 중지 및 제거 실패' }
            }
        }

        // 4단계: 새로운 컨테이너 배포
        stage('Deploy New Container') {
            steps {
                sh 'docker-compose up -d react-native'
                echo 'React-Native 서비스 배포 완료'
            }
            post {
                success { echo '배포 성공' }
                failure { echo '배포 실패' }
            }
        }
    }

    post {
        always { echo '파이프라인 실행 완료' }
        success { echo 'Pipeline Execution Success.' }
        failure { echo 'Pipeline Execution Failed.' }
    }
}
